package Server;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.Socket;

public class FileServer implements Runnable {
	private Socket socket = null;

	public FileServer(Socket s) {
		this.socket = s;
	}
	
	@Override
	public void run() {
		try {
			DataInputStream dtaInStream = new DataInputStream(socket.getInputStream());
			String userName = dtaInStream.readUTF();
			String fileName = dtaInStream.readUTF();
			long fileLength = dtaInStream.readLong();
			
			File directory = new File(userName);
			if(!directory.exists()) {
				directory.mkdir();
			}
			
			File music = new File(directory.getAbsolutePath() + File.separatorChar + fileName);
			FileOutputStream fileOutStream = new FileOutputStream(music);
			
			byte[] buffer = new byte[1024];
			int size = 0;
			
			while((size = dtaInStream.read(buffer, 0, buffer.length)) != -1) {
				fileOutStream.write(buffer, 0, size);
				fileOutStream.flush();
			}
			
			try { if (fileOutStream != null) fileOutStream.close(); } catch (IOException e) {};
			try { if (dtaInStream != null) dtaInStream.close(); } catch (IOException e) {};
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try { if (socket != null) socket.close(); } catch (IOException e) {};
		}
	}
	
}
